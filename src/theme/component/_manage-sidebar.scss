@use '~@angular/material' as mat;
@import "../mixins/amixin";

@mixin manage-sidebar-color($config-or-theme) {
  $config: mat.get-color-config($config-or-theme);
  $foreground: map-get($config, foreground);
  $background: map-get($config, background);
  $primary: map-get($config, primary);
  $accent: map-get($config, accent);
  $warn: map-get($config, warn);

  $text-color: mat.get-color-from-palette($foreground, text, 0.75);

  .manage-sidebar {
    a {
      color: mat.get-color-from-palette($foreground, text, 0.75);
      &:hover {
        color: mat.get-color-from-palette($primary);
      }
    }
    .manage-brand {
      border-bottom: 1px solid mat.get-color-from-palette($foreground, divider);
      .name {
        a {
          color: mat.get-color-from-palette($foreground, text, 0.75);
        }
      }
      .email {
        color: mat.get-color-from-palette($foreground, text, 0.5);
      }
    }
    .manage-menu {
      @include scrollbar(mat.get-color-from-palette($foreground, divider, 0.2));
      .icon {
        color: mat.get-color-from-palette($foreground, text, 0.7);
      }
      a {
        &.active {
          color: mat.get-color-from-palette($primary);
          &:after {
            background-color: mat.get-color-from-palette($primary, 0.05);
          }
        }
      }
      .mat-list {
        .mat-list-item {
          color: mat.get-color-from-palette($foreground, text, 0.5);
          &:hover {
            a {
              &:after {
                background-color: mat.get-color-from-palette(
                  $foreground,
                  text,
                  0.05
                );
              }
            }
          }
        }
      }
      .icon-list {
        .item {
          &.active,
          &:hover {
            background-color: mat.get-color-from-palette(
              $foreground,
              text,
              0.05
            );
          }
          &.active {
            &::before {
              background-color: mat.get-color-from-palette(
                $primary,
                default-contrast
              );
            }
          }
          app-hover-menu {
            background-color: mat.get-color-from-palette($background, card);
            @include mat.elevation(
              3,
              mat.get-color-from-palette($foreground, divider, 0.7)
            );
            .top {
              &.not-link {
                color: mat.get-color-from-palette($foreground, text, 0.75);
                a,
                a:hover {
                  color: mat.get-color-from-palette($foreground, text, 0.75);
                }
              }
            }
            .hover-menu {
              background-color: mat.get-color-from-palette($background, card);
              @include scrollbar(
                mat.get-color-from-palette($foreground, divider)
              );
              .sub-menu {
                .mat-button {
                  &:hover {
                    &::before {
                      background-color: mat.get-color-from-palette(
                        $primary,
                        0.1
                      );
                    }
                    a {
                      color: mat.get-color-from-palette($primary);
                    }
                  }
                }
                .child {
                  background-color: mat.get-color-from-palette(
                    $background,
                    card
                  );
                  border-left: 1px solid
                    mat.get-color-from-palette($foreground, divider);
                  border-right: 1px solid rgba(0, 0, 0, 0.075);
                  box-shadow: 7px 0 16px rgba(0, 0, 0, 0.075),
                    -12px 0 0 0 mat.get-color-from-palette($background, card);
                }
                .has-child {
                  &:after {
                    color: mat.get-color-from-palette($foreground, text, 0.75);
                  }
                }
              }
            }
          }
        }
      }
      .mat-accordion {
        > .mat-list {
          &.active {
            &::before {
              background-color: mat.get-color-from-palette($primary);
            }
          }
        }
        .mat-expansion-panel {
          &.active {
            .mat-expansion-panel-header {
              &::before {
                background-color: mat.get-color-from-palette($primary);
              }
            }
          }
        }
      }
      .mat-expansion-panel-body {
        a {
          color: mat.get-color-from-palette($foreground, text, 0.6);
        }
      }
    }
    .manage-footer {
      border-top: 1px solid mat.get-color-from-palette($foreground, divider);
      .toggle {
        .wrapper {
          .mat-icon {
            @include mat.elevation(
              4,
              mat.get-color-from-palette($foreground, text),
              0.3
            );
            transition: all 0.1s ease;
          }
          &:hover {
            .mat-icon {
              background-color: mat.get-color-from-palette(
                $foreground,
                base,
                0.85
              );
              color: mat.get-color-from-palette($primary, 50);
            }
          }
        }
      }
    }
    &.expanded {
      .manage-brand {
        .profile {
          .picture {
            background-color: mat.get-color-from-palette($primary, 0.5);
            border: 4px solid mat.get-color-from-palette($primary, 0.5);
          }
        }
      }

      > .mat-divider {
        border-top-color: mat.get-color-from-palette($background, card, 0.12);
      }
    }
  }

  .inverse {
    .expanded {
      background-color: mat.get-color-from-palette($primary, 0.85);
      color: mat.get-color-from-palette($primary, default-contrast);
      .manage-menu {
        .icon {
          color: mat.get-color-from-palette($primary, default-contrast);
        }
      }
      .manage-footer {
        .toggle {
          .wrapper {
            @include mat.elevation(
              4,
              mat.get-color-from-palette($primary),
              0.3
            );
          }
        }
      }
    }
  }
}
