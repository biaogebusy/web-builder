@import "~@angular/material/theming";
@import "../mixins/amixin";
@import "./builder/builder-sidebar";
@import "./builder/builder-list";
@import "./builder/builder-meta-edit";

$dark-primary: mat-palette($mat-gray, 300, 50, 500);
$dark-accent: mat-palette($mat-teal, A200, A100, A400);
$dark-warn: mat-palette($mat-deep-orange);
$dark-theme: mat-dark-theme($dark-primary, $dark-accent, $dark-warn);

@mixin theme($background, $foreground, $primary) {
  background-color: mat-color($background, card);

  .builder-sidebar {
    background-color: mat-color($foreground, elevation, 0.85);
    color: #f5f5f5;
    @include mat-elevation(4, mat-color($background, focused-button), 0.4);
    .mat-divider {
      border-top-color: rgba(255, 255, 255, 0.2);
    }
    .menu {
      .item {
        &:hover,
        &:focus {
          color: #fff;
          &::after {
            background-color: rgba(#fff, 0.1);
          }
        }

        &.active {
          color: #fff;
          &::after {
            background-color: mat-color($primary);
          }
        }
      }
    }
  }
  .builder {
    .builder-toolbar {
      background-color: mat-color($background, background);
      color: mat-color($foreground, text, 0.75);
      .left {
        .page-title {
          border-bottom: 1px solid transparent;
          &:focus-visible {
            outline: none;
            border-bottom-color: mat-color($primary);
          }
        }
      }
      .middle {
        .time {
          color: mat-color($foreground, text, 0.45);
        }
      }
      &.fixed {
        @include mat-elevation(2, mat-color($background, tooltip), 0.25);
      }
      .right {
        color: mat-color($foreground, text, 0.5);
      }
    }
    .builder-main {
      > .sidebar {
        @include sidebar($background, $foreground, $primary);
      }
    }
    > .mat-drawer-container {
      background-color: transparent;
      .builder-list {
        @include builder-list($background, $foreground, $primary);
      }
    }
    .mat-drawer-content {
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.11);
      @include meta-edit($background, $foreground, $primary);
      @include scrollbar(mat-color($primary));

      .backdrop {
        background-color: mat-color($foreground, slider-off-active);
      }
      .showcase {
        background-color: mat-color($background, card);
        > app-card-1v1 {
          > .card-1v1 {
            @include scrollbar(mat-color($primary));
          }
        }
        .showcase-footer {
          color: mat-color($foreground, text);
          border-top: 1px solid mat-color($foreground, divider);
          background: mat-color($background, background);
        }
        .component-toolbar {
          + app-spacer {
            background-color: mat-color($primary, 0.25);
          }
        }
      }
      .preview-container {
        .mat-drawer {
          .actions {
            &.expand {
              background-color: mat-color($background, card);
              @include mat-elevation(2, mat-color($background, hover), 0.4);
            }
          }
        }
      }
    }
    .cdk-drag-placeholder {
      background-color: mat-color($background, background);
      border: 3px dotted mat-color($foreground, divider);
      width: 100%;
      &:hover {
        background-color: mat-color($primary, 200);
        border-color: mat-color($primary);
      }
    }
  }
}
@mixin builder-color($config-or-theme) {
  $config: mat-get-color-config($config-or-theme);
  $foreground: map-get($config, foreground);
  $background: map-get($config, background);
  $primary: map-get($config, primary);
  $accent: map-get($config, accent);
  $warn: map-get($config, warn);

  $darkBg: map-get(
    $map: $dark-theme,
    $key: background,
  );
  $darkFore: map-get(
    $map: $dark-theme,
    $key: foreground,
  );
  $darkPrimary: map-get(
    $map: $dark-theme,
    $key: primary,
  );
  .builder-wrapper {
    @include theme($background, $foreground, $primary);

    &.dark {
      @include theme($darkBg, $darkFore, $darkPrimary);
      .builder-list,
      #builder-list {
        background-color: #fafafa !important;
      }
      .preview-container {
        .mat-drawer {
          .actions {
            &.expand {
              color: #fafafa;
            }
          }
        }
      }
    }
  }

  // for dynamic-component host class
  .active-toolbar {
    position: relative;
    display: block;
    box-sizing: content-box;
    &:hover {
      > .component-toolbar {
        display: block !important;
      }
    }
    > .component-toolbar {
      position: absolute;
      left: 0;
      top: 0px;
      width: 100%;
      z-index: 999;
      line-height: 1;
    }
  }
  .drawer-right {
    .builder-list {
      min-width: 85vw;
    }
  }

  .popup-select {
    .popup {
      @include mat-elevation(2, mat-color($background, hover), 0.4);
      background-color: mat-color($background, card);
      border: 1px solid mat-color($foreground, divider);
      .hover-show {
        app-spacer {
          background-color: mat-color($primary, 0.1);
        }
      }
    }
    .item {
      .inner {
        &:hover {
          background-color: mat-color($primary, 0.1);
        }
      }
    }
  }
}
