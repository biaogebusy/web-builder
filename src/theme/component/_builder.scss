@import "~@angular/material/theming";
@import "../mixins/amixin";
@import "./builder/builder-sidebar";
@import "./builder/builder-list";

$dark-primary: mat-palette($mat-gray, 300, 50, 500);
$dark-accent: mat-palette($mat-teal, A200, A100, A400);
$dark-warn: mat-palette($mat-deep-orange);
$dark-theme: mat-dark-theme($dark-primary, $dark-accent, $dark-warn);

@mixin theme($background, $foreground, $primary) {
  background-color: mat-color($background, card);
  .builder-toolbar {
    background-color: mat-color($background, background);
    color: mat-color($foreground, text, 0.75);
    .middle {
      .time {
        color: mat-color($foreground, text, 0.45);
      }
    }
    &.fixed {
      @include mat-elevation(2, mat-color($background, tooltip), 0.25);
    }
    .right {
      color: mat-color($foreground, text, 0.5);
    }
  }
  .sidebar {
    @include sidebar($background, $foreground, $primary);
  }
  > .mat-drawer-container {
    background-color: transparent;
    .builder-list {
      @include builder-list($background, $foreground, $primary);
    }
  }
  .mat-drawer-content {
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.11);
    @include scrollbar(mat-color($primary));

    .overlay {
      background-color: mat-color($foreground, slider-off-active);
    }
    .showcase {
      background-color: mat-color($background, card);
      > app-card-1v1 {
        > .card-1v1 {
          @include scrollbar(mat-color($primary));
        }
      }
      .showcase-footer {
        border-top: 1px solid mat-color($foreground, divider);
        background: mat-color($background, background);
      }
      .component-toolbar {
        + app-spacer {
          background-color: mat-color($primary, 0.25);
        }
      }
    }
    .preview-container {
      .mat-drawer {
        .actions {
          &.expand {
            background-color: mat-color($background, card);
            @include mat-elevation(2, mat-color($background, hover), 0.4);
          }
        }
      }
    }
  }
  .cdk-drag-placeholder {
    background-color: mat-color($background, background);
    border: 3px dotted mat-color($foreground, divider);
    width: 100%;
    &:hover {
      background-color: mat-color($primary, 200);
      border-color: mat-color($primary);
    }
  }
}
@mixin builder-color($config-or-theme) {
  $config: mat-get-color-config($config-or-theme);
  $foreground: map-get($config, foreground);
  $background: map-get($config, background);
  $primary: map-get($config, primary);
  $accent: map-get($config, accent);
  $warn: map-get($config, warn);

  $darkBg: map-get(
    $map: $dark-theme,
    $key: background,
  );
  $darkFore: map-get(
    $map: $dark-theme,
    $key: foreground,
  );
  $darkPrimary: map-get(
    $map: $dark-theme,
    $key: primary,
  );
  .builder {
    @include theme($background, $foreground, $primary);

    &.dark {
      @include theme($darkBg, $darkFore, $darkPrimary);
      .builder-list,
      #builder-list {
        background-color: #fafafa !important;
      }
    }
  }

  // for dynamic-component host class
  .active-toolbar {
    position: relative;
    display: block;
    box-sizing: content-box;

    &:after {
      content: "";
      display: block;
      position: absolute;
      box-sizing: border-box;
      width: 100%;
      height: 100%;
      z-index: 10;
      left: 0;
      top: 0;
      pointer-events: none;
      opacity: 1;
      transition: all 0.1s ease-in;
      border: 2px dotted transparent;
    }
    &:hover {
      &:after {
        border-color: mat-color($primary);
      }
      > .component-toolbar {
        display: block !important;
      }
    }
    > .component-toolbar {
      position: absolute;
      left: 0;
      width: 100%;
      z-index: 999;
      line-height: 1;
      .title {
        background-color: mat-color($primary);
        color: mat-color($primary, default-contrast);
      }
    }
  }
  .drawer-right {
    .builder-list {
      min-width: 85vw;
    }
  }
}
