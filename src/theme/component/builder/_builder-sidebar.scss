@use "@angular/material" as mat;
@mixin builder-sidebar($background, $foreground, $primary) {
  .builder-sidebar {
    .icon-menu,
    .accordion-menu {
      @include scrollbar(mat.get-color-from-palette($foreground, divider, 0.2));
    }
    &.closed {
      background-color: mat.get-color-from-palette(
        $foreground,
        elevation,
        0.85
      );
      color: #f5f5f5;
      @include mat.elevation(
        4,
        mat.get-color-from-palette($background, focused-button),
        0.4
      );
      .mat-divider {
        border-top-color: rgba(255, 255, 255, 0.2);
      }
      .icon-menu {
        .item {
          &:hover,
          &:focus {
            > .custom-icon {
              color: #fff;
              &::after {
                background-color: rgba(#fff, 0.1);
              }
            }
          }

          &.active {
            > .custom-icon {
              color: mat.get-color-from-palette($primary, default-contrast);
              &::after {
                background-color: mat.get-color-from-palette($primary);
              }
            }
          }
        }
        .child {
          background-color: mat.get-color-from-palette($background, card);
          color: mat.get-color-from-palette($foreground, text, 0.75);
          @include mat.elevation(
            3,
            mat.get-color-from-palette($foreground, divider, 0.7)
          );
          .hover-menu {
            background-color: mat.get-color-from-palette($background, card);
            @include scrollbar(
              mat.get-color-from-palette($foreground, divider)
            );
            .child-menu {
              .mdc-list-item {
                &.active {
                  .mdc-list-item__primary-text {
                    color: mat.get-color-from-palette($primary);
                  }
                }
                .mdc-list-item__primary-text {
                  color: mat.get-color-from-palette($foreground, text, 0.75);
                }
                &:hover {
                  &:after {
                    background-color: mat.get-color-from-palette($primary, 0.1);
                  }
                  .mdc-list-item__primary-text {
                    color: mat.get-color-from-palette($primary);
                  }
                }
              }
            }
          }
        }
      }
    }
    &.opened {
      .accordion-menu {
        app-icon {
          color: mat.get-color-from-palette($foreground, text, 0.7);
        }
        > .mat-accordion {
          > .mat-mdc-list {
            &.no-child {
              &.active {
                a {
                  color: mat.get-color-from-palette($foreground, text, 0.75);
                }
                &::after {
                  background-color: mat.get-color-from-palette($primary);
                }
              }
            }
          }
        }
        .mat-accordion {
          > .mat-mdc-list {
            &.active {
              &::before {
                background-color: mat.get-color-from-palette($primary);
              }
            }
          }
          .mat-expansion-panel {
            .mat-expansion-panel-header {
              a {
                color: mat.get-color-from-palette($foreground, text, 0.75);
              }
            }
            &.active {
              .mat-expansion-panel-header {
                &::after {
                  background-color: mat.get-color-from-palette($primary);
                }
              }
            }
          }
        }
        .mat-mdc-list {
          .mat-mdc-list-item {
            color: mat.get-color-from-palette($foreground, text, 0.5);
            &:hover {
              a {
                &:after {
                  background-color: mat.get-color-from-palette(
                    $foreground,
                    text,
                    0.05
                  );
                }
              }
            }
          }
        }
      }
    }
    .bottom {
      .toggle {
        .wrapper {
          .mat-icon {
            @include mat.elevation(
              4,
              mat.get-color-from-palette($foreground, text),
              0.3
            );
            transition: all 0.1s ease;
          }
          &:hover {
            .mat-icon {
              background-color: mat.get-color-from-palette(
                $foreground,
                base,
                0.85
              );
              color: mat.get-color-from-palette($primary, 50);
            }
          }
        }
      }
    }
  }
}
